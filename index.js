const core = require('@actions/core');
//const github = require('@actions/github');
const fs = require('fs')
const axios = require('axios');

try {
  //const path = './file.txt' 
  core.getInput('cve-list-path');
  console.log(`Attempting to pick up CVE list from ${path}`);

  var cveData = fs.readFileSync(path, 'utf8').split('\n').filter(Boolean).filter(entry => !entry.startsWith("#"));
  const lastReviewed = Date.parse(cveData[0])

  var promises = []
  cveData = cveData.slice(1)
  for (var key in cveData) {
    promises.push(axios.get(`https://cve.circl.lu/api/cve/${cveData[key]}`))    
  }

  axios.all(promises).then(axios.spread((...reqs) => {
      var modifiedCVEs = 0
      for (var i in reqs) {
        if (reqs[i].data) {
          if (Date.parse(reqs[i].data.Modified) > lastReviewed) {
            console.log(`${reqs[i].data.id} was modified onÂ ${reqs[i].data.Modified}`)
            modifiedCVEs += 1
          }
        }
      }
      return modifiedCVEs
  })).then(  mcves => core.setOutput("modified_cves", mcves) )
} catch (error) {
  core.setFailed(error.message);
}
